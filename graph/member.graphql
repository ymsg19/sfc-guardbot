scalar Time
scalar Cursor

interface Node {
  id: ID!
}

type Member implements Node {
  id: ID!
  discord_uid: String!
  email: String!

  is_verified: Boolean!
  verification_expiry: Time!
}

input MemberInput {
  discord_uid: String!
  email: String!
}

input MemberVerificationInput {
  id: ID!
  verification_token: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Cursor
  endCursor: Cursor
}

type MemberConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [MemberEdge]
}

type MemberEdge {
  node: Member
  cursor: Cursor!
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  members(after: Cursor, first: Int, before: Cursor, last: Int, where: MemberWhereInput): MemberConnection!
}

type Mutation {
  createMember(input: MemberInput!): Member!
  verifyMember(input: MemberVerificationInput!): Member!
  requestMemberVerificationToken(id: ID!): Member!
  deleteMember(id: ID!): Boolean!
}